* // ---------- Other Information ---------- // *
# Payload
// Data sent between client and server

# Universal Resource Locator (URL)
// A subset of the URI that identifies a resource and explains how to access that
 // resource by providing an explicity method like https:// or ftp://
// All URLs are URIs, but not all URIs are URLs

# Resource
// The data contained at the end of the resource URI.
// The key abstraction of information in REST is a resource.
// Any information that can be named can be a resource:
    // a document or image
    // a temporal service (weather)
    // a collection of other resources
    // a non-virtual object
    // etc ...
// Any concept that might be the target of an author's hypertext reference
 // must fit within the definition of a resource.
// A resource is a conceptual mapping to a set of entities, not the entity
 // that corresponds to the mapping at any particular point in time.

 # Representation
// The representation of the data obtained on access.
// REST components perform actions on a resource by using a representation to
 // capture the current or intended state of that resource and trasnferring
 // that representation between components.

REST Server:
// Creates a unique representation that can be modified to fit specifications

# AuthN
// Who you are
# AuthZ
// What you can do